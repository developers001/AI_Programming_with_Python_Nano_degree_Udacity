# -*- coding: utf-8 -*-
"""s3_Gabriela Holzel.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KorM_jjB8he4NnWL_rNdzuqZ6-_KmNKI

Write a Python program/function to print the sum, largest number, smallest number, average of the numbers in a list.
"""

def ex_1(list_provided):
  print(f'Sum: {sum(list_provided)}')
  print(f'Max: {max(list_provided)}')
  print(f'Min: {min(list_provided)}')
  print(f'Mean: {sum(list_provided)/len(list_provided)}')

number_list = [1,2,3,4,5]
ex_1(number_list)

"""Write a Python function that takes two lists and returns True if they have at least one common member."""

def ex_2(list1, list2):
  result = False
  for elem in list1:
    if elem in list2:
      result = True
  print(result)

list1 = ['Tom', 'Bob', 'Sue', 'Rachel']
list2 = ['Bob', 'Susan', 'Roger', 'Mike']

ex_2(list1, list2)

"""Write a Python program/function to combine two dictionary adding values for common keys"""

def ex_3(dict1,dict2):
  final_dict = {}
  for key, value in dict1.items():
    if key in dict2:
      final_dict[key] = value + dict2[key]
    else:
      final_dict[key] = value
  for key, value in dict2.items():
    if key not in final_dict:
      final_dict[key] = value
  print(final_dict)

d1 = {'a': 100, 'b': 200, 'c':300}
d2 = {'a': 300, 'b': 200, 'd':400}
ex_3(d1,d2)

"""Write a Python program/function which iterates the integers from 1 to 100. For multiples of three print "Fizz" instead of the number and for the multiples of five print "Buzz". For numbers which are multiples of both three and five print "FizzBuzz"."""

def ex_4():
  for num in range(1,100):
    if num % 3 == 0 and num % 5 == 0:
        print("FizzBuzz")
    elif num % 3 == 0:
        print("Fizz")
    elif num % 5 == 0:
        print("Buzz")
    else:
      print(num)

ex_4()

"""Write a Python program/function to check the validity of password input by users.Validation :
* At least 1 letter between [a-z] and 1 letter between [A-Z].
* At least 1 number between [0-9].
* At least 1 character from [$#@].
* Minimum length 6 characters.
* Maximum length 16 characters.

I had to look for the "re" library, otherwise the function would have been very long.
"""

import re

def ex_5(password):
  if len(password)<=16 and len(password)>6 and re.search("[a-z]", password) and re.search("[A-Z]", password) and re.search("[0-9]", password) and re.search("[$#@]", password):
    print('This is a valid password.')
  else:
    print('This is not a valid password.')

ex_5('c4D$9c4D$9')

"""Write a Python function that takes a list and returns a new list with unique elements of the first list."""

def ex_6(list_provided):
  list_provided = list(set(list_provided))
  print(list_provided)

ex_6([1,2,3,3,3,3,4,5])

"""Write a function which calculates the length of a hypotenuse of a right angle triangle given height and base"""

def ex_7(b,h):
  import math
  hypotenuse = math.sqrt(b**2 + h**2)
  print(hypotenuse)

ex_6(3,4)

"""Given a word, compute the Scrabble score for that word where the values are as follows
* A, E, I, O, U, L, N, R, S, T: 1
* D, G: 2
* B, C, M, P: 3
* F, H , V, W, Y: 4
* K: 5
* J, X: 8
* Q, Z: 10
"""

def ex_8(word):
  count = 0
  score = {"a": 1, "b": 3, "c": 3, "d": 2, "e": 1, "f": 4, "g": 2, "h": 4, "i": 1, "j": 8, "k": 5, "l": 1, "m": 3, "n": 1, "o": 1, "p": 3, "q": 10, "r": 1, "s": 1, "t": 1, "u": 1, "v": 4, "w": 4, "x": 8, "y": 4, "z": 10}

  for letter in word.lower():
    for item in score:
      if letter == item:
        count += score[item]
  print(f'The word is: {word} and the score is: {count}')

ex_7('Cabbage')

"""Write a Python program to find the greatest common divisor(gcd) of two integers."""

def ex_9(a,b):
  if b == 0 or a == 0:
    return a
  else:
    return ex_9(b, a % b)

ex_9(50,680)