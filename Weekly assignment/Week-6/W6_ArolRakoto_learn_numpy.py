# -*- coding: utf-8 -*-
"""learn Numpy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pFk4LuPdHsOZzayOkUteGxt60NMPM2Xw
"""

import numpy as np
#Question 1:
x = np.array([1,3,2,4,1,3,2,5,2]).reshape(3,3)

print(x, '\n', x.shape,'\n', x.ndim, x.dtype)

determinant = np.linalg.det(x)
print(determinant)

#Question 2:

A=np.array([4,2,3,-1,1,-3,2,4,9]).reshape(3,3)
w,v=np.linalg.eig(A)
print('E-value', w)
print('E-vector', v)

#Question 3:

B = np.array([2,2,0,0,0,1,4,2,0]).reshape(3,3)
print(np.linalg.inv(B))

#Question 4:

compute = np.dot(B,B)
identity = np.eye(3)
res = np.allclose(identity, compute, 0.1,0.1)
print('B*B is equal to identity matrix:', res)

# Question 5:

compare = np.dot(A,B)+ (2*np.dot(A,A)) -3*B
print(compare)

A
E_value, V_vector = np.linalg.eig(A)
print(V_vector)
D = np.diag(E_value)
print(D)
Q = np.linalg.inv(V_vector)
print(Q)

# Question 7

coef = np.array([2,-4,9,4,-3,8,-2,4,-2]).reshape(3,3)
value = np.array([-38,-26,17])
result=np.linalg.solve(coef, value)
print(result)

# Question 8

C =np.arange(6).reshape(3,2)
D = np.arange(8).reshape(2,4)
print(C,'\n',D)
print(C.shape, '\n', D.shape)
print('Transpose_C:', np.transpose(C))
print('Transpose_D:', np.transpose(D))

# Question 9

np.allclose(np.transpose(np.dot(C,D)),np.dot(np.transpose(D),np.transpose(C)))

# Question 10

n = np.array([1,2,4,3,4,6,7,8,5,9,2,1]).reshape(4,3)
m = n.reshape(6,2)
m

# Question 11